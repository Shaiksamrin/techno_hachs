import random

def print_playboard(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

def check_winner(board, player):
    for row in board:
        if all(cell == player for cell in row):
            return True
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True
    if all(board[i][i] == player for i in range(3)) or all(board[i][2 - i] == player for i in range(3)):
        return True
    return False

def is_playboard_full(board):
    return all(cell != " " for row in board for cell in row)

def get_empty_cells(board):
    empty_cells = []
    for row in range(3):
        for col in range(3):
            if board[row][col] == " ":
                empty_cells.append((row, col))
    return empty_cells

def get_computer_move(board):
    empty_cells = get_empty_cells(board)
    return random.choice(empty_cells)

def main():
    board = [[" " for _ in range(3)] for _ in range(3)]
    current_player = "O"

    print("Welcome to Tic-Tac-Toe!")
    print_playboard(board)

    while True:
        if current_player == "O":
            row, col = map(int, input("Player O, enter row (0-2) and column (0-2) separated by space: ").split())
        else:
            row, col = get_computer_move(board)
            print(f"Player X chooses row {row} and column {col}")

        if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
            board[row][col] = current_player
            print_playboard(board)

            if check_winner(board, current_player):
                print(f"Player {current_player} wins!")
                break
            elif is_playboard_full(board):
                print("It's a draw!")
                break

            current_player = "X" if current_player == "O" else "O"
        else:
            print("Invalid move!!!.\n Try again!!")

if __name__== "__main__":
    main()
